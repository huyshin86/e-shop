version: '3.8'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTICSEARCH_VERSION}
    container_name: elasticsearch
    networks:
      - backend
    restart: always
    
    environment:
      - 'discovery.type=single-node'
      - 'xpack.security.enabled=false'
      - 'xpack.monitoring.enabled=false'
      - 'xpack.ml.enabled=false'
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ports:
      - '9200:9200'
      - '9300:9300'
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    
  mysql:
    image: mysql:${DB_VERSION}
    container_name: mysql
    networks:
      - backend
    restart: always
    
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}

    ports:
      - "3306:3306"
    
    volumes:
      - db_data:/var/lib/mysql
    
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      timeout: 20s
      retries: 3
      start_period: 5s

  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    networks:
      - backend
    restart: always
    
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

volumes:
  db_data:
  redis_data:
  elasticsearch_data:

networks:
  backend:
    driver: bridge